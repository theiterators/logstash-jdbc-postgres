input {
  file {
    path => "${LOG_PATH}"
    start_position => "end"

    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601} "
      negate => true
      what => previous
    }
  }
}

filter {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:time} %{LOGLEVEL:loglevel} %{DATA:thread} %{JAVACLASS:class} - \[(cid: %{DATA:cid})?(, uid: %{DATA:uid})?\] %{GREEDYDATA:payload}" }
  }
  date {
    timezone => "UTC"
    match => ["time" , "ISO8601", "yyyy-MM-dd HH:mm:ss.SSS"]
    target => "@timestamp"
    remove_field => ["time"]
  }
  mutate {
    rename => { "message" => "full_log" }
  }
}

output {
  jdbc {
    connection_string => "${JDBC_CONN_STR}"
    statement => [ "INSERT INTO ${TABLE} (version, host, path, timestamp, full_log, loglevel, payload, class, thread, uid, cid) VALUES(?, ?, ?, CAST (? AS TIMESTAMPTZ), ?, ?, ?, ?, ?, CAST (? AS UUID), ?)", "@version", "host", 
"path", "@timestamp", "full_log", "loglevel", "payload", "class", "thread", "uid", "cid" ]
  }
}
